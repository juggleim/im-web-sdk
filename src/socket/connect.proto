syntax = "proto3";

package codec;

message ConnectMsgBody{
    string protoId = 1;
    string sdkVersion = 2; //sdk 版本
    string appkey = 3;
    string token = 4;

    //设备信息
    string deviceId = 5;
    string platform = 6;//iOS/Android/iPad
    string deviceCompany = 7;//设备厂商, huawei/apple
    string deviceModel = 8;//设备型号  例如: iPhone8
    string deviceOsVersion = 9;//手机操作系统版本
    string pushToken = 10;//厂商推送Token
    //网络
    string networkId = 11;//网络类型；4G/wifi
    string isp_num = 12;//网络运营商编号
    string clientIp = 13;
}

message ConnectAckMsgBody{
    int32 code = 1;
    string userId = 2;
    string session = 3;
    int64 timestamp = 4;
}

message DisconnectMsgBody{
    int32 code = 1;
    int64 timestamp = 2;
}

message PublishMsgBody{
    int32 index = 1;
    string topic = 2;
    string targetId = 3;
    int64 timestamp = 4;
    bytes data = 5;
}

message PublishAckMsgBody{
    int32 index = 1;
    int32 code = 2;
    string msgId = 3;
    int64 timestamp = 4;
    int64 msgIndex = 5;
}

message QueryMsgBody{
    int32 index = 1;
    string topic = 2;
    string targetId = 3;
    int64 timestamp = 4;
    bytes data = 5;
}

message QueryAckMsgBody{
    int32 index = 1;
    int32 code = 2;
    int64 timestamp = 3;
    bytes data = 4;
}

message QueryConfirmMsgBody{
    int32 index = 1;
}

message ImWebsocketMsg {
    int32 version = 1;
    int32 cmd = 2;
    int32 qos  = 3;
    oneof testof{
        ConnectMsgBody connectMsgBody = 11;
        ConnectAckMsgBody ConnectAckMsgBody = 12;
        DisconnectMsgBody disconnectMsgBody = 13;
        PublishMsgBody publishMsgBody = 14;
        PublishAckMsgBody pubAckMsgBody = 15;
        QueryMsgBody qryMsgBody = 16;
        QueryAckMsgBody qryAckMsgBody = 17;
        QueryConfirmMsgBody qryConfirmMsgBody = 18;
    }
}

enum ChannelType {
    Private = 1;  //单聊
    Group = 2;    //群聊
    Chatroom = 3; // 聊天室
    System = 4;   // 系统消息
}

message PushData{
    string title = 1;
    string pushId = 2;
    string pushText = 3;
    string pushExtraData = 4;
}

message QryHisMsgsReq{
    string converId = 1;
    ChannelType type = 2;
    int64 startTime = 3;
    int32 count = 4;
    int32 order = 5;
    repeated string msgTypes = 6;
}

message DownMsgSet{
    repeated DownMsg msgs = 1;
    int64 syncTime = 2;
    bool isFinished = 3;
    UserInfo targetUserInfo = 4;
    GroupInfo groupInfo = 5;
}

message UpMsg {
    string msgType = 1;   //消息类型定义
    bytes msgContent= 2;  // 消息实体数据
    int32 flags = 3;      // 标识 
    string clientUid=4;   //客户端指定的消息唯一ID
    PushData pushData = 5; // 推送设置
    MentionInfo mentionInfo = 6; //@ 消息
    DownMsg referMsg = 7;
    repeated string toUserIds = 8;
    MergedMsgs mergedMsgs = 9;
}
message MentionInfo {
    MentionType mentionType = 1;
    repeated UserInfo targetUsers = 2;  //被@ 人列表
}
enum MentionType{
    MentionDefault = 0;
    MentionAll = 1;    //@ 所有人
    MentionSomeone = 2; //@ 指定人
}
message DownMsg{
    string targetId = 1;
    ChannelType type = 2;
    string msgType = 3;
    string senderId = 4;
    string msgId = 5;
    int64 msgIndex = 6;
    bytes msgContent = 7;
    int64 msgTime = 8;
    int32 flags = 9;
    bool isSend = 10;
    string platform = 11;
    string clientUid = 12;
    PushData pushData = 13;
    MentionInfo mentionInfo = 14;
    bool isRead = 15;
    DownMsg referMsg = 16;
    UserInfo targetUserInfo = 17;
    GroupInfo groupInfo = 18;
    MergedMsgs mergedMsgs = 19;
    int32 undisturbType = 20;
    int32 memberCount = 21;
    int32 readCount = 22;
}

message MergedMsgs{
    ChannelType channelType = 1;
    string userId = 2;
    string targetId = 3;
    repeated SimpleMsg msgs = 4;
}

message GroupInfo{
    string groupId = 1;
    string groupName = 2;
    string groupPortrait = 3;
    int32 isMute = 4;
    repeated KvItem extFields = 5;
    int64 updatedTime = 6;
}

message KvItem{
    string key = 1;
    string value = 2;
}

message UserIdReq{
    string userId = 1;
}

message UserInfo{
    string userId = 1;
    string nickname = 2;
    string userPortrait = 3;
    repeated KvItem extFields = 4;
    int64 updatedTime = 5;
}

message SyncConversationsReq{
    int64 startTime = 1;
    int32 count = 2;
}

message QryConversationsReq{
    int64 startTime = 1;
    int32 count = 2;
    int32 order = 3;
}

message QryConversationsResp{
    repeated Conversation conversations = 1;
    bool isFinished = 2;
}
message ClearUnreadReq{
    repeated Conversation conversations = 1;
}
message DelConversationReq{
    repeated Conversation conversations = 1;
}
message ConversationsReq{
    repeated Conversation conversations = 1;
}
message Conversation{
    string converId = 1;
    string targetId = 2;
    ChannelType channelType = 3;
    int64 updateTime = 4;
    int64 unreadCount = 5;
    DownMsg msg = 6;
    int64 latestReadedMsgIndex = 7;
    MentionMsg LatestMentionMsg = 8;
    int32 isTop = 9;
    int64 topUpdatedTime = 10;
    int32 undisturbType = 11;
    UserInfo userInfo = 12;
    GroupInfo groupInfo = 13;
    int64 syncTime = 14;
}

message SyncMsgReq{
    int64 syncTime = 1;//收件箱同步时间
    bool containsSendBox = 2;//是否包含发件箱消息
    int64 sendBoxSyncTime = 3;//发件箱同步时间,
    string chatroomId = 4;
}

message SyncChatroomMsgReq{
    int64 syncTime = 1;//收件箱同步时间
    string chatroomId = 4;
}

message Notify{
    NotifyType type = 1;
    int64 syncTime = 2;
    string chatroomId = 3;
}
enum NotifyType {
    Default = 0;
    Msg = 1;
}
message RecallMsgReq{
    string targetId = 1;   //单聊是为对方userid，群聊时为groupid
    ChannelType channelType = 2;
    string msgId = 3;  //待撤回消息的msg_id
    int64 msgTime = 4; //待撤回消息的发送时间
    string msgType = 5;  //撤回命令消息的消息类型
    bytes msgContent =6; //撤回命令消息的内容
}
message MarkReadReq{
    string targetId = 1;
    ChannelType channelType = 2;
    repeated SimpleMsg msgs = 3;  //批量标记消息的已读状态
    repeated IndexScope indexScopes = 4;
}

message SimpleMsg{
    string msgId = 1;
    int64 msgTime = 2;
    int64 msgIndex = 3;
}

message IndexScope{
    int64 startIndex = 1;
    int64 endIndex = 2;
}
message ModifyMsgReq{
    string targetId = 1;
    ChannelType channelType = 2;
    string msgId = 3;  //必填
    int64 msgTime = 4; //可选
    int64 msgIndex = 5; //可选
    bytes msgContent = 6; //修改后的消息内容
}
message CleanHisMsgReq{
    string targetId = 1;
    ChannelType channelType = 2;
    int64 cleanMsgTime = 3;
}
message QryHisMsgByIdsReq{
    string targetId = 1;
    ChannelType channelType = 2;
    repeated string msgIds = 3;
}
message ChatRoomReq{
    string chatId = 1;
}
message QryTotalUnreadCountReq{
}
message QryTotalUnreadCountResp{
    int64 totalCount = 1;
}
message QryMentionMsgsReq{
    string targetId = 1;
    ChannelType channelType = 2;
    int64 startIndex = 3;
    int32 count = 4;
    int32 order = 5;  //0：倒序；1：正序
}
message QryMentionMsgsResp{
    repeated MentionMsg mentionMsgs = 1;
    bool isFinished = 2;
}
message MentionMsg{
    MentionType mentionType = 1;
    string msgId = 2;
    int64 msgIndex = 3;
    int64 msgTime = 4;
    UserInfo senderInfo = 5;
}
message QryUploadTokenResp{
    OssType ossType = 1;
    oneof ossOf{
        QiniuCredResp qiniuCred = 11;
    }
}
enum OssType{
    DefaultOss = 0;
    Qiniu = 1;
}
message QiniuCredResp{
    string domain = 1;
    string token = 2;
}

message QryUploadTokenReq{
    FileType fileType = 1;
}
enum FileType {
    DefaultFileType = 0;
    Image = 1;
    Audio = 2;
    Video = 3;
    File = 4;
}
message QryReadDetailReq{
    string targetId = 1;
    ChannelType channelType = 2;
    string msgId = 3;
}
message QryReadDetailResp{
    int32 readCount = 1;
    int32 memberCount = 2;
    repeated MemberReadDetailItem readMembers = 3;
    repeated MemberReadDetailItem unreadMembers = 4;
}
message MemberReadDetailItem{
    UserInfo member = 1;
    int64 time = 2;
}
message QryMergedMsgsReq{
    int64 startTime = 1;
    int32 count = 2;
    int32 order = 3;
}
message UndisturbConversReq {
    string userId = 1;
    repeated UndisturbConverItem items = 2;
}
message UndisturbConverItem {
    string targetId = 1;
    ChannelType channelType = 2;
    int32 undisturbType = 3;  // 0：非免打扰；1：普通免打扰
}
message QryTopConversReq{
    int64 startTime = 1;
}