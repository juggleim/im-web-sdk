syntax = "proto3";

package codec;

message ConnectMsgBody{
    string protoId = 1;
    string sdkVersion = 2; //sdk 版本
    string appkey = 3;
    string token = 4;

    //设备信息
    string deviceId = 5;
    string platform = 6;//iOS/Android/iPad
    string deviceCompany = 7;//设备厂商, huawei/apple
    string deviceModel = 8;//设备型号  例如: iPhone8
    string deviceOsVersion = 9;//手机操作系统版本
    string pushToken = 10;//厂商推送Token
    //网络
    string networkId = 11;//网络类型；4G/wifi
    string isp_num = 12;//网络运营商编号
    string clientIp = 13;
}

message ConnectAckMsgBody{
    int32 code = 1;
    string userId = 2;
    string session = 3;
    int64 timestamp = 4;
}

message DisconnectMsgBody{
    int32 code = 1;
    int64 timestamp = 2;
}

message PublishMsgBody{
    int32 index = 1;
    string topic = 2;
    string targetId = 3;
    int64 timestamp = 4;
    bytes data = 5;
}

message PublishAckMsgBody{
    int32 index = 1;
    int32 code = 2;
    string msgId = 3;
    int64 timestamp = 4;
}

message QueryMsgBody{
    int32 index = 1;
    string topic = 2;
    string targetId = 3;
    int64 timestamp = 4;
    bytes data = 5;
}

message QueryAckMsgBody{
    int32 index = 1;
    int32 code = 2;
    int64 timestamp = 3;
    bytes data = 4;
}

message QueryConfirmMsgBody{
    int32 index = 1;
}

message ImWebsocketMsg {
    int32 version = 1;
    int32 cmd = 2;
    int32 qos  = 3;
    oneof testof{
        ConnectMsgBody connectMsgBody = 11;
        ConnectAckMsgBody ConnectAckMsgBody = 12;
        DisconnectMsgBody disconnectMsgBody = 13;
        PublishMsgBody publishMsgBody = 14;
        PublishAckMsgBody pubAckMsgBody = 15;
        QueryMsgBody qryMsgBody = 16;
        QueryAckMsgBody qryAckMsgBody = 17;
        QueryConfirmMsgBody qryConfirmMsgBody = 18;
    }
}

enum ChannelType {
    Private = 1;  //单聊
    Group = 2;    //群聊
    Chatroom = 3; // 聊天室
    System = 4;   // 系统消息
}

message PushData{
    string title = 1;
    string pushId = 2;
    string pushText = 3;
    string pushExtraData = 4;
}

message QryHisMsgsReq{
    string converId = 1;
    ChannelType type = 2;
    int64 startTime = 3;
    int32 count = 4;
    int32 order = 5;
}

message DownMsgSet{
    repeated DownMsg msgs = 1;
    int64 syncTime = 2;
    bool isFinished = 3;
}

message UpMsg {
    string msgType = 1;   //消息类型定义
    bytes msgContent= 2;  // 消息实体数据
    int32 flags = 3;      // 标识 
    string clientUid=4;   //客户端指定的消息唯一ID
    PushData pushData = 5; // 推送设置
}

message DownMsg{
    string fromId = 1;
    ChannelType type = 2;
    string msgType = 3;
    string groupId = 4;
    string msgId = 5;
    int64 msgIndex = 6;
    bytes msgContent = 7;
    int64 msgTime = 8;
    int32 flags = 9;
    bool isSend = 10;
    string platform = 11;
    string clientUid = 12;
    PushData pushData = 13;
}

message SyncConversationsReq{
    int64 startTime = 1;
    int32 count = 2;
}

message QryConversationsReq{
    int64 startTime = 1;
    int32 count = 2;
    int32 order = 3;
}

message QryConversationsResp{
    repeated Conversation conversations = 1;
}

message Conversation{
    string converId = 1;
    string targetId = 2;
    ChannelType type = 3;
    int64 updateTime = 4;
    int32 unreadCount = 5;
    DownMsg msg = 6;
}